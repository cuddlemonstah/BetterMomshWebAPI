// <auto-generated />
using System;
using BetterMomshWebAPI.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BetterMomshWebAPI.Migrations
{
    [DbContext(typeof(API_DataContext))]
    partial class API_DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.BabyBook", b =>
                {
                    b.Property<long>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("BookId"));

                    b.Property<DateOnly>("Created")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("BookId");

                    b.HasIndex("user_id");

                    b.ToTable("BabyBook");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.Journal", b =>
                {
                    b.Property<long>("journalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("journalId"));

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Entry_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("JournalName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PhotoData")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("journalEntry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("weekId")
                        .HasColumnType("bigint");

                    b.HasKey("journalId");

                    b.HasIndex("BookId");

                    b.HasIndex("weekId");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.Months", b =>
                {
                    b.Property<long>("MonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("MonthId"));

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TrimesterId")
                        .HasColumnType("bigint");

                    b.HasKey("MonthId");

                    b.HasIndex("TrimesterId");

                    b.ToTable("Months");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.RefreshTokens", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("TokenCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("TokenExpired")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.TokenBlacklist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("Id"));

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TokenBlacklist");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.Trimester", b =>
                {
                    b.Property<long>("TrimesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("TrimesterId"));

                    b.Property<long>("BookId")
                        .HasColumnType("bigint");

                    b.Property<string>("Trimesters")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TrimesterId");

                    b.HasIndex("BookId");

                    b.ToTable("Trimester");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.Weeks", b =>
                {
                    b.Property<long>("weekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("weekId"));

                    b.Property<long>("MonthId")
                        .HasColumnType("bigint");

                    b.Property<string>("week_number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("weekId");

                    b.HasIndex("MonthId");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.userCred", b =>
                {
                    b.Property<Guid>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.ToTable("user_credential");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.userInfo", b =>
                {
                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("ContactNumber")
                        .HasColumnType("numeric(12,2)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("RelationshipStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("user_id");

                    b.ToTable("user_profile");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.BabyBook", b =>
                {
                    b.HasOne("BetterMomshWebAPI.EFCore.userCred", "UserCred")
                        .WithMany("BabyBooks")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserCred");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.Journal", b =>
                {
                    b.HasOne("BetterMomshWebAPI.EFCore.BabyBook", "babyBook")
                        .WithMany("journal")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BetterMomshWebAPI.EFCore.Weeks", "week")
                        .WithMany("journal")
                        .HasForeignKey("weekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("babyBook");

                    b.Navigation("week");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.Months", b =>
                {
                    b.HasOne("BetterMomshWebAPI.EFCore.Trimester", "trim")
                        .WithMany("mon")
                        .HasForeignKey("TrimesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("trim");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.RefreshTokens", b =>
                {
                    b.HasOne("BetterMomshWebAPI.EFCore.userCred", "userCred")
                        .WithOne("RefreshTokens")
                        .HasForeignKey("BetterMomshWebAPI.EFCore.RefreshTokens", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userCred");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.Trimester", b =>
                {
                    b.HasOne("BetterMomshWebAPI.EFCore.BabyBook", "babyBook")
                        .WithMany("trim")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("babyBook");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.Weeks", b =>
                {
                    b.HasOne("BetterMomshWebAPI.EFCore.Months", "mon")
                        .WithMany("weeks")
                        .HasForeignKey("MonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mon");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.userInfo", b =>
                {
                    b.HasOne("BetterMomshWebAPI.EFCore.userCred", "userCred")
                        .WithOne("UserInfo")
                        .HasForeignKey("BetterMomshWebAPI.EFCore.userInfo", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userCred");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.BabyBook", b =>
                {
                    b.Navigation("journal");

                    b.Navigation("trim");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.Months", b =>
                {
                    b.Navigation("weeks");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.Trimester", b =>
                {
                    b.Navigation("mon");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.Weeks", b =>
                {
                    b.Navigation("journal");
                });

            modelBuilder.Entity("BetterMomshWebAPI.EFCore.userCred", b =>
                {
                    b.Navigation("BabyBooks");

                    b.Navigation("RefreshTokens")
                        .IsRequired();

                    b.Navigation("UserInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
